# Атрибуты экземпляра класса

class Car:
    model = "BMW"
    engine = 1.6

a1 = Car()                              # Создание экземпляра класса Car
a2 = Car()                              # Создание ещё одного экземпляра класса Car

print(Car.__dict__)
print(a1.model)                         # Обращение к атрибуту model экземпляра a1 класса Car
print(a2.engine)                        # Обращение к атрибуту engine экземпляра a2 класса Car
print()

print(a1.__dict__)                      # Получить атрибуты экземпляра a1
print(a2.__dict__)                      # Получить атрибуты экземпляра a2
print()

a1.seat = 4                             # Динамическое создание атрибута в экземпляре a1 (влияет только на данный экземпляр)
print(Car.__dict__)
print(a1.__dict__)
print(a2.__dict__)
print()

a1.model = 'Lada'                       # Изменение значения атрибута model экземпляра a1 (влияет только на данный экземпляр), при этом атрибут становится локальным
print(Car.model)
print(a1.model)                         # Поиск по имени атрибута сначала производится в экземпляре класса, если отсутствует, то в классе экземпляра
print(a1.__dict__)                      # При изменении значения атрибута экземпляра, данный атрибут добавляется в атрибуты экземпляра
print(a2.model)
print()

a2.size = 80                            # Динамическое создание атрибута в экземпляре a2 (влияет только на данный экземпляр)
print(Car.__dict__)
print(a1.__dict__)
print(a2.__dict__)
print(a2.size)
#print(a1.size)                         # Вызовет ошибку AttributeError
#print(Car.size)                        # Вызовет ошибку AttributeError
print()

Car.r = 100                             # Динамическое создание атрибута класса влияет на все существующие экземпляры данного класса
print(a1.r)                             # Поиск по имени атрибута сначала производится в экземпляре класса, если отсутствует, то в классе экземпляра
print(a2.r)                             # Поиск по имени атрибута сначала производится в экземпляре класса, если отсутствует, то в классе экземпляра
print()

del a1.model                            # Удаление атрибута экземпляра
print(a1.__dict__)                      # Атрибут удалён из пространства имён экземпляра
print(a1.model)                         # При этом обращение к данному атрибуту возможно, поиск будет производиться в пространстве имён класса
